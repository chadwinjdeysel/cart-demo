/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/Cju2X7wUWK7
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Archivo } from 'next/font/google'

archivo({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client"

import Image from "next/image"
import { Button } from "@/components/ui/button"
import { useShallow } from "zustand/react/shallow"
import { useCartStore } from "@/stores/cart/cartStore"
import { Counter } from "./counter"
import { calculateTotal } from "@/helpers/cartHelpers";
import { useRouter } from 'next/navigation'

export function Cart() {
  const router = useRouter();

  const { products, updateCart, removeFromCart } = useCartStore(
    useShallow((state) => (
      { 
        products: state.products, 
        updateCart: state.updateCart,
        removeFromCart: state.removeFromCart 
      }))
  );

  let total:number = 0;

  if(products.length >= 0) {
    total = calculateTotal(products);
  }

  if(products.length <= 0) {
    return (
      <div className="container mx-auto px-4 md:px-6 py-12">
        <h1 className="text-4xl my-3">Cart is Empty</h1>
      </div>
    )
  }

  return (
    <div className="container mx-auto px-4 md:px-6 py-12">
      <h1 className="text-4xl my-3">Your Cart</h1>
      <div className="grid gap-8">
        {products.map((product) => (
          <div key={product.id} className="grid grid-cols-[200px_1fr_auto] items-center gap-4">
            <Image 
              src={product.imageURL}
              alt={product.name} 
              width={200} 
              height={200} 
              className="rounded-lg object-cover w-full aspect-square" />
            <div className="grid gap-2">
              <h3 className="font-semibold">{product.name}</h3>
              <p className="text-sm text-muted-foreground">{product.description}</p>
            </div>
            <div className="flex items-center gap-4">
              <div className="flex items-center gap-2">
                <Counter 
                  value={product.quantity}
                  onDecrement={() => updateCart(product, -1)}
                  onIncrement={() => updateCart(product, 1)}
                  decrementDisabled={product.quantity === 1}
                />
              </div>
              <div className="text-base font-medium">${(product.price * product.quantity).toFixed(2)}</div>
              <Button size="icon" variant="outline" onClick={() => removeFromCart(product.id)}>
                <XIcon className="h-4 w-4" />
              </Button>
            </div>
          </div>
        ))}
      </div>
      <div className="mt-8 flex justify-end">
        <div className="grid gap-4 bg-muted/40 rounded-lg p-6 w-full max-w-md">
          <div className="flex items-center justify-between">
            <span className="text-base font-medium">Subtotal</span>
            <span className="text-base font-medium">${total.toFixed(2)}</span>
          </div>
          <Button size="lg" onClick={() => router.push('/order/confirmation', { scroll: false })} >Proceed to Checkout</Button>
        </div>
      </div>
    </div>
  )
}

function XIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M18 6 6 18" />
      <path d="m6 6 12 12" />
    </svg>
  )
}
